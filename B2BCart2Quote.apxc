global class B2BCartToQuote {
   @InvocableMethod
   public static List<String> getCartItems(List<String> cartID) {   //0a64V000000kA1lQAE   Lauren Bailey's Active Cart
     
      //Get Account ID and Owner (User) from WebCart which is the Cart Header
      //Get list of Products from cartItems
      List<WebCart> WebCart = [SELECT AccountID, OwnerID, Quote__c FROM WebCart WHERE ID in :cartID];
      List<CartItem> cartItems = [SELECT Product2Id FROM CartItem WHERE CartID in :cartID];
      
      //Create an Opportunity
      Opportunity opp = new Opportunity(CloseDate = Date.today(), AccountId = Webcart[0].AccountID, StageName = 'Qualification', Name = 'Subscription Opportunity');
      Database.insert(opp);

      //Create Quote Header
      Id oppId = opp.Id;
      SBQQ__Quote__c q = new SBQQ__Quote__c(SBQQ__Primary__c = true, SBQQ__Account__c = Webcart[0].AccountID, SBQQ__SubscriptionTerm__c = 12, SBQQ__Opportunity2__c = oppId, SBQQ__Status__c = 'Draft', SBQQ__Type__c = 'Quote'); 
      List<Contact> ContactList = [SELECT Id FROM Contact WHERE AccountId = :Webcart[0].AccountID LIMIT 1];
        if (ContactList.size() > 0) {
            q.SBQQ__PrimaryContact__c = ContactList.get(0).Id;
        }
      Database.insert(q);
      ID quoteId = q.Id;  
       
       
      //WebCart wc = new WebCart();
      //wc.ID = cartid;
      //wc.Quote__c = q.Id;
      //Database.upsert(WebCart);
      
     

      //Create Quote Lines by looping through Cart Items
      for (CartItem currentCartItem : cartItems) {
      	SBQQ__QuoteLine__c ql = new SBQQ__QuoteLine__c();
      	ql.SBQQ__Quote__c = quoteID;
      	ql.SBQQ__Product__c = currentCartItem.Product2ID;
      	Database.insert(ql);
      	System.debug('****** Debug :   ' + currentCartItem.ID);
    }     


       
      return null;

   }
} 
//insert into SBQQ__QuoteLine__c (SBQQ__Quote__c, SBQQ__Product__c) values ('a0l4V0000059UOtQAM', '01t4V000007sI75QAE')
